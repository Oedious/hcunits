# Commands to connect to the wordpress MySQL database
mysql hcunits -u root -p --local-infile=1

# Delete the 'team_abilities' table
DROP TABLE units;

# Create the units table
CREATE TABLE units (
  -- The ID of the unit.
  unit_id VARCHAR(32) NOT NULL PRIMARY KEY,

  -- The set to which this unit belongs. See set_list.js.
  set_id VARCHAR(16) NOT NULL,
  
  -- The collector's number of the unit within a set (may contain letters).
  collector_number VARCHAR(16) NOT NULL,
  
  -- The plain text name of the unit.
  name TEXT(128) NOT NULL,

  -- The type of the unit.
  -- TODO: Add types for 'battlefield_condition', 'event_dial', 'resource', 'terrain'
  type ENUM('character', 'object', 'map', 'bystander', 'tarot_card', 'mystery_card', 'id_card') NOT NULL,

  -- A JSON array of numbers containing point values of different starting lines.
  point_values JSON,

  -- The rarity of the unit.
  rarity ENUM('common', 'uncommon', 'rare', 'super_rare', 'chase', 'ultra_chase', 'limited_edition', 'fast_forces'),

  -- The “real name” of the unit.
  real_name TEXT(128),

  -- A JSON array of strings that denote additional properties or specializations,
  -- some of which may indicate restrictions on team construction. Values include:
  -- "prime", "unique", "title", "team_up", "legacy", "captain", "sidekick", "ally"
  properties JSON,
  
  -- The dimensions of the unit base.
  dimensions ENUM('1x1', '1x2', '2x2', '2x4', '3x6'),

  -- The team abilities of the unit. See team_ability_list.js.
  team_abilities JSON,

  -- A JSON array of strings containing the keywords of the unit. See keyword_list.js.
  keywords JSON,

  -- A JSON array of objects containing special powers and traits, of the format:
  -- {
  --   "type": string - contains "trait", "speed", "attack", "defense", "damage", "costed_trait", "rally_trait", "title_trait", "plus_plot_points", "minus_plot_points", "location", "consolation"
  --   "name": string - the name of the power.
  --   "description": string - the description of the power.
  --   "powers": (Optional) array of strings, containing names to standard powers granted.
  --   "point_value": (Optional) the additional point value for a costed trait or location bonus.
  --   "rally_type": (Optional) contains "friendly", "opposing" or "all".
  --   "rally_die": (Optional) the die value that triggers the rally effect.
  --   "plot_points": (Optional) the amount of plot points gained or lost on use.
  -- }
  special_powers JSON,

  -- Should be in the form of an array of strings, with values from:
  -- "elevated", "hindering", "blocking", "outdoor_blocking", "destroy_blocking", "characters", "move_through".
  improved_movement JSON,

  -- Should be in the form of an array of strings, with values from:
  -- "elevated", "hindering", "blocking", "destroy_blocking", "characters", "adjacent"
  improved_targeting JSON,

  -- The type or specialization of an object.
  object_type ENUM('standard', 'special', 'equipment', 'plastic_man', 'relic'),
  
  -- The size of an object.
  object_size ENUM('light', 'heavy', 'ultra_light', 'ultra_heavy'),
  
  -- Should be in the form of an array of strings, with values from:
  -- "indestructible", "equip_any", "equip_friendly", "unequip_ko", "unequip_drop"
  object_keyphrases JSON,

  -- The type or specialization of an bystander.
  bystander_type ENUM('standard', 'construct'),
  
  -- For 'map' types, the path to the URL containing the map layout.
  map_url TEXT(256),
  
  -- The range value of the unit.
  unit_range TINYINT,

  -- The number of targets (ie. lightning bolts) of the unit.
  targets TINYINT,

  speed_type ENUM('boot', 'wing', 'dolphin', 'transport_boot', 'transport_wing', 'transport_dolphin'),
  attack_type ENUM('fist', 'autonomous', 'sharpshooter', 'duo', 'team'),
  defense_type ENUM('shield', 'indomitable', 'vehicle'),
  damage_type ENUM('starburst', 'giant', 'colossal', 'tiny'),
  dial_size TINYINT,

  -- A JSON array of objects containing special powers and traits, of the format:
  -- {
  --   "click_number": number corresponding to the element on the dial.
  --   "starting_line": (Optional) if True, indicates that this is a starting line.
  --   "speed_power": (Optional) power_name
  --   "speed_value": number
  --   "attack_power": (Optional) power_name
  --   "attack_value": number
  --   "defense_power": (Optional) power_name
  --   "defense_value": number
  --   "damage_power": (Optional) power_name
  --   "damage_value": number
  -- }
  dial JSON
);

CREATE INDEX idx_unit_id ON units(unit_id);

LOAD XML LOCAL INFILE 'set_btu.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_av4e.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_hgpc.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_xmxssop.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_xmxs.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_msdp.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_wotr.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_ffwotr.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_ff2021.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_affe.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_em.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_xmrf.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_ffxmrf.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_ww80.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_ffff.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_ffffff.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_dcff.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_hx.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_ffhx.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_wkm21.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_wkd21.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_svc.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_ffsvc.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_bgame.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_f4.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_fff4.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_wkm20.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_wkd20.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';

LOAD XML LOCAL INFILE 'set_wk.xml'
  REPLACE
  INTO TABLE units
  ROWS IDENTIFIED BY '<row>';


ALTER TABLE units
MODIFY COLUMN rarity ENUM('common', 'uncommon', 'rare', 'super_rare', 'chase', 'ultra_chase', 'limited_edition');

ALTER TABLE units
MODIFY COLUMN speed_type ENUM('boot', 'wing', 'dolphin', 'transport_boot', 'transport_wing', 'transport_dolphin');

ALTER TABLE units
MODIFY COLUMN damage_type ENUM('starburst', 'giant', 'colossal', 'tiny');

SELECT unit_id, set_id, name, collector_number, point_values, rarity
FROM units
WHERE set_id = 'hgpc';
